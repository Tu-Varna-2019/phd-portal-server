package com.tuvarna.phd.service.impl;

import com.tuvarna.phd.entity.DoctoralCenter;
import com.tuvarna.phd.exception.DoctoralCenterRoleNotFoundException;
import com.tuvarna.phd.mapper.DoctoralCenterMapper;
import com.tuvarna.phd.repository.DoctoralCenterRepository;
import com.tuvarna.phd.repository.DoctoralCenterRoleRepository;
import com.tuvarna.phd.service.DoctoralCenterService;
import com.tuvarna.phd.service.dto.DoctoralCenterDTO;

import io.quarkus.mailer.Mail;
import io.quarkus.mailer.reactive.ReactiveMailer;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import jakarta.transaction.Transactional;
import org.jboss.logging.Logger;

@ApplicationScoped
public class DoctoralCenterServiceImpl implements DoctoralCenterService {
  private final DoctoralCenterRepository doctoralCenterRepository;
  private final DoctoralCenterRoleRepository doctoralCenterRoleRepository;
  private final DoctoralCenterMapper doctoralCenterMapper;

  @Inject
  private final static Logger LOG = Logger.getLogger(DoctoralCenterServiceImpl.class);
  @Inject
  private ReactiveMailer mailer;

  @Inject
  public DoctoralCenterServiceImpl(DoctoralCenterRepository doctoralCenterRepository,
      DoctoralCenterMapper doctoralCenterMapper, DoctoralCenterRoleRepository doctoralCenterRoleRepository) {
    this.doctoralCenterRepository = doctoralCenterRepository;
    this.doctoralCenterMapper = doctoralCenterMapper;
    this.doctoralCenterRoleRepository = doctoralCenterRoleRepository;
  }

  @Override
  @Transactional
  public DoctoralCenter create(DoctoralCenterDTO doctoralCenterDTO) throws DoctoralCenterRoleNotFoundException {
    LOG.info("Service received a request to create a doctor center user: " + doctoralCenterDTO);

    DoctoralCenter doctoralCenter = this.doctoralCenterMapper.toEntity(doctoralCenterDTO);
    doctoralCenter.setRole(this.doctoralCenterRoleRepository.getDoctoralCenterRoleByRole(doctoralCenterDTO.getRole()));

    LOG.info("Creating an autogenerated password for user now...");
    doctoralCenter.hashPassword(16);

    LOG.info("Now saving user to the database...");
    this.doctoralCenterRepository.save(doctoralCenter);

    return doctoralCenter;
  };

  public void sendEmail(String email, String password) {
    this.mailer.send(
        Mail.withHtml(
            email, "Welcome to TuVarna!",
            "<html><body><h3>Welcome to the newly created PHD platform for TuVarna! </br> You have been added to the PHD platform as an expert of the doctoral center. Please don't share your password with anyone! </br></br> - Password: "
                + password + " </h3></body></html>"));
  };
}
